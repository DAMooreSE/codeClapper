Make sure you have the following softwares installed before proceeding:
*Visual Studio Code 'https://code.visualstudio.com/download'
*NodeJS and npm package manager 'https://nodejs.org/en/download/'


//Installing Dependencies
1.1.If Using git, Pull any changes made to the master branch.
1.2.Exit any programs or services that are running that controls any recording device.
1.1.Download and Open the project folder '/stable-build/' in Visual Studio Code


//Configuring Firebase
//A Video Guide to follow along can be found at: https://drive.google.com/file/d/1o7aLTdsmUv14VL0WJFEKHKoFuaW0Zzhh/view?usp=sharing
2.1.Open a web browser and go to https://firebase.google.com/
2.2.Select "Create a project"
2.3.Name your project whatever you want, I use "codeClapper", and accept the terms and continue
2.4.Make sure Google Analytics is NOT enabled for the project and then select "create project"
2.5.Select the gear icon next to "project overview" and then "project settings"
2.6.Under "your apps", select the option to add a new web application.
2.7.Again, name your app whatever you want, I stick with codeClapper, and check the box to set up firebase hosting before selecting "register app"
2.8.You can skip the instructions for installing firebase and its packages for now, we'll do that afterwards, keep selecting next and then "continue to console".
2.9.Select "build", then "authentication", then "get started"
2.10.Select "Email/Password" from "Native providers" under "sign-in providers"
2.11.Enable Email/Password and click "save"
2.12.Select "Firestore Database" under "Build" then "create database"
2.13.Select "Start in production mode" and then select "next"
2.14.Select whatever datacenter you'd like the database to be hosted at and select "enable"
2.15.Staying in "firestore database", select the "Rules" tab and change line 5 to "if true;" instead of "if false;" and select publish
2.16.Select "realtime database" under "Build", then "create database", select "start in locked mode" and then "enable"
2.17.Staying in "realtime database", select the "rules" tab and then change "false" to "true" on lines 3 and 4 before selecting "publish"
2.18.Staying in "realtime database", select the "Data" tab and then copy the url of the database to use later.
2.19.Select the gear icon next to "project overview" and then "project settings" then scroll down.
2.20.Under "SDK setup and configuration", go to the second text box of code starting with "// Import the..."
2.21.You're going to copy everything from the line with "const firebaseConfig = {" down to "const app = initializeApp(firebaseConfig);"
2.22.Open /recorder/index.js make the following changes:
	1.Replace lines 17 through 29 with your copied code.
	2.On line 17, change "const firebaseConfig = {" to "var firebaseConfig = {"
	3.1.If you're missing a line starting with "databaseURL: " under line 19 "authDomain: " then follow these steps to add it: 
		3.2.Go back to the firebase webpage and go to "realtime database" again, copy the url for your previously created database
		3.3.Create a new line under "authDomain:" and add the line "databaseURL: "URLFROMPREVIOUSSTEP", "
	4.On line 29, change "const app = initializeApp(firebaseConfig);" to "firebase.initializeApp(firebaseConfig)"
	5.Copy lines 17 through 29.
2.23.Open /clapper/src/services/api.js and replace lines 8 through 20 with your copied code and then save both files.
//You're now finished setting up and implementing a new FireBase project for your application



//Now we install the necessary packages to run the application:
3.Open Visual Studio Code again and ensure your terminal is open at the main project folder /stable-build
//if it's not, you can simply close the terminal and open a new one using Terminal > New Terminal on the menu bar.
4.Run 'npm install -g yarn' (only done if yarn hasn't been installed on your machine before; use sudo as needed)
6.Run 'npm install -g firebase-tools' (only done if firebase-tools hasn't been installed on your machine before; use sudo as needed)
7.Run 'npm run install' and wait for the dependencies to install
8.Run 'npm run start-clapper' which should start and run the UI service and launch a browser opened to the application.
9.1.If sucessfully running the last command doesn't automatically open a browser to the app, run 'cd clapper' and then 'npm run start'
//This page can be accessed by devices on the same network by opening 'your_ip_address:3006' in a browser



//Now register your user
10.Leave the other terminal open and running and open a new one in Visual Studio with Terminal > New Terminal
11.If you already have created your account, You can fill in your login info in
	the "login" script inside the file /stable-build/package.json
11.1.Once you save the changes, run "npm run start-rec" to login and launch the recorder
12.If you haven't previously created an account, Run 'cd recorder'
12.1.Run 'node index.js signup --email YOUREMAIL --password YOURPASSWORD' (THIS WILL SAVE TO AN ONLINE DATABASE NOW, ONLY DONE ONCE!)
12.2.Run "npm run start" which should start the recording service



//Using CodeClapper
14. Open 'localhost:3006' in a new PRIVATE window in a browser and try to login with your new login.
//Some browsers will cache the old login so a private window ensure this doesn't happen



//DEBUGGING
//Before I could install additional npm packages I had to take ownership of its files, if you get an error when running this, use this command if similar problem is ran into:
//1.5. Open a terminal run 'sudo chown -R $(whoami) $(npm config get prefix)/{lib,node_modules,bin,share}'